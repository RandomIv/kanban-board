generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  boards Board[]

  @@map("users")
}

model Board {
  id          String   @id @default(uuid())
  title       String
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  ownerId String @map("owner_id")
  owner   User   @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  lists List[]

  @@map("boards")
}

model List {
  id        String   @id @default(uuid())
  title     String
  position  Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  boardId String @map("board_id")
  board   Board  @relation(fields: [boardId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  cards Card[]

  @@map("lists")
}

model Card {
  id          String    @id @default(uuid())
  title       String
  description String?
  position    Int
  targetDate  DateTime? @map("target_date")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  listId String @map("list_id")
  list   List   @relation(fields: [listId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("cards")
}
